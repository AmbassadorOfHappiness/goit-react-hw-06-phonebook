{"version":3,"sources":["components/Section/Section.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Section/Section.js","redux/contacts/actions.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","App.js","redux/contacts/reducers.js","redux/store.js","index.js"],"names":["module","exports","Section","title","children","className","style","addContact","createAction","name","number","payload","id","uuid","deleteContact","changeFilter","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","formInner","onSubmit","preventDefault","find","el","alert","type","autoComplete","onChange","pattern","required","Filter","target","ContactListItem","onRemoveContact","onClick","ContactList","map","deleteContacts","App","createReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.4e46d7fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__b_133\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInner\":\"ContactForm_formInner__2TjLx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1sHYi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactList_title__2748O\"};","import React from \"react\";\r\nimport style from '../Section/Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2 className={style.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport const addContact = createAction(\"contacts/add\", ({ name, number }) => ({\r\n    payload: {\r\n        id: uuid(),\r\n        name,\r\n        number,\r\n    }, \r\n}));\r\nexport const deleteContact = createAction(\"contacts/delete\");\r\nexport const changeFilter  = createAction('contacts/changeFilter');\r\n\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n    const contacts = getContacts(state);\r\n    const filter = getFilter(state);\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n};\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {addContact} from \"../../redux/contacts/actions\";\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\nimport style from '../ContactForm/ContactForm.module.css'\r\n\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default: return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const searchByName = contacts.find((el) => el.name === name);\r\n\r\n    if (searchByName) {\r\n      alert(`${name} is already in contacts`);\r\n    } else {\r\n      dispatch(addContact({name, number}))\r\n    }\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n  return (\r\n    <form className={style.formInner} onSubmit={handleSubmit} >\r\n      <label> Name:\r\n        <input\r\n          className='input'\r\n          name=\"name\"\r\n          type=\"text\"\r\n          value={name}\r\n          autoComplete=\"off\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов\"\r\n          onChange={handleChange}\r\n        />\r\n        Number:\r\n        <input\r\n          className='input'\r\n          name=\"number\"\r\n          type=\"tel\"\r\n          value={number}\r\n          autoComplete=\"off\"\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className='button' type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport {changeFilter} from \"../../redux/contacts/actions\";\r\n\r\nimport style from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n    const dispatch = useDispatch();\r\n    const value = useSelector(getFilter);\r\n    const onChange = e => dispatch(changeFilter(e.target.value))\r\n\r\n    return (\r\n        <div className={style.filter}>\r\n            <label>Find contacts by name\r\n                <input\r\n                    className='input'\r\n                    type=\"text\"\r\n                    name=\"filter\"\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    />\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\n// import styles from '../ContactListItem/contactListItem.module.css';\r\n\r\nconst ContactListItem = ({ name, number, id, onRemoveContact }) => {\r\n  return (\r\n  <li>\r\n          <p>{name} : {number}</p>\r\n          <button\r\n\r\n          type=\"button\"\r\n          className='button'\r\n          onClick={() => onRemoveContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n  </li>\r\n)};\r\n\r\nexport default ContactListItem;","import React from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {deleteContact} from \"../../redux/contacts/actions\";\r\nimport ContactListItem from './ContactListItem';\r\nimport { getVisibleContacts } from \"../../redux/contacts/contacts-selectors\";\r\nimport style from './ContactList.module.css';\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  const deleteContacts = id => dispatch(deleteContact(id));\r\n\r\n  return (\r\n  <ul className={style.title}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactListItem\r\n        key={id}\r\n        id={id}\r\n        name={name}\r\n        number={number}\r\n        onRemoveContact={()=> deleteContacts(id)}\r\n      />\r\n    ))}\r\n  </ul>    \r\n  )\r\n};\r\n\r\nexport default ContactList;\r\n","import './App.css';\r\n\r\nimport Section from './components/Section/Section';\r\nimport ContactForm from './components/ContactForm/ContactForm'\r\nimport Filter from './components/Filter/Filter'\r\nimport ContactList from './components/ContactList/ContactList'\r\n\r\nfunction App () {\r\n  return (\r\n    <>\r\n      <Section title='Phonebook'>\r\n        <ContactForm />\r\n      </Section>\r\n      <Filter />\r\n      {ContactList && (<Section title='Contacts'>\r\n        <ContactList />\r\n      </Section>)}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport { addContact, deleteContact, changeFilter } from './actions';\r\n\r\nconst initState = [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst items = createReducer(initState, {\r\n    [addContact]: (state, {payload}) => [...state, payload],\r\n    [deleteContact]: (state, {payload}) => state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n\r\n// console.log('contactsList из редюсера:',contactsList)\r\n\r\n// const contactsList = (state = initState, action) => {\r\n//     switch (action.type) {\r\n//         case \"contact/add\":\r\n//             return [...state, action.payload];\r\n//             break;\r\n        \r\n//         case \"contact/delete\":\r\n//             return state.filter(contact => contact.id !== action.payload.id);\r\n//             break;\r\n        \r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n \r\n// const contactFilter = (state = '', action) => {\r\n//     return state;\r\n// };\r\n","import {configureStore} from '@reduxjs/toolkit';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nimport contactsReducer from './contacts/reducers';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n      },\r\n      middleware: (getDefaultMiddleware) => getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n    // devTools: process.env.NODE_ENV === 'development',\r\n  });\r\n  \r\nconst persistor = persistStore(store);\r\nconst value = { store, persistor };\r\n\r\nexport default value;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate persistor={store.persistor} loading={null}> \r\n       <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}